Solving DGLAP
=============

We are solving the DGLAP equations given by

.. math::
    \frac{d}{d\ln(\mu_F^2)} \mathbf{f}(x,\mu_F^2) =
        \int\limits_x^1\!\frac{dy}{y}\, \mathbf{P}(x/y) \cdot \mathbf{f}(y,\mu_F^2)


The non-siglet case can be solved in a linear way:

.. math::
    \frac{d f_{ns}(x,\mu_F^2)}{d\ln(\mu_F^2)} =
        \int\limits_x^1\!\frac{dy}{y}\, P_{ns}(y/x) \cdot f_{ns}(y,\mu_F^2)

We can thus write the non-siglet equations in N-space by

.. math::
    \frac{d\tilde f_{ns}(N,\mu_F^2)}{d\ln(\mu_F^2)} = -\tilde \gamma_{ns}(N) \cdot \tilde f_{ns}(N,\mu_F^2)

We also change the evolution variable to
:math:`t(\mu_F^2) = \ln(1/a_s(\mu_F^2))`
and then the differential equations to solve is given by

.. math::
    \frac{d\tilde f_{ns}(N,\mu_F^2)}{dt}
        = \frac{d\ln(\mu_F^2)}{dt} \cdot \frac{d\tilde f(N,\mu_F^2)}{d\ln(\mu_F^2)}
        = - \frac{a_s(\mu_F^2)}{\beta(a_s(\mu_F^2))} \tilde P_{ns}(N) \cdot \tilde f_{ns}(N,\mu_F^2)

Expanding the rhs to LO we get the final equation

.. math::
    \frac{d\tilde f^{(0)}(N,\mu_F^2)}{dt} = \frac{1}{\beta_0} \cdot \tilde P_{ns}^{(0)}(N) \cdot \tilde f_{ns}^{(0)}(N,\mu_F^2)

which is solved by

.. math::
    \tilde f^{(0)}(N,t_1) = \exp((t_1-t_0) \tilde P_{ns}^{(0)}(N)/\beta_0 ) \cdot \tilde f_{ns}^{(0)}(N,t_0)

Using the interpolation basis on the inital state PDF, we can define the
evolution kernel operator :math:`\hat O` by

.. math::
    \hat O_{k,j}^{ns,(0)}(t_1,t_0) = \mathcal{M}^{-1}\left[\exp((t_1-t_0)\tilde P_{ns}^{(0)}(N)/\beta_0)\tilde p_j(N)\right](x_k')

Now, we can write the solution to DGLAP in a true matrix operator scheme and
find

.. math::
    f^{(0)}(x_k,t_1) = \hat O_{k,j}^{(0)}(t_1,t_0) f^{(0)}(x_j,t_0)

The benchmarking LHA reference is given by :cite:`Giele:2002hx`
and :cite:`Dittmar:2005ed`.